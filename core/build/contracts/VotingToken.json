{
  "contractName": "VotingToken",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "Snapshot",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "snapshotId",
          "type": "uint256"
        }
      ],
      "name": "balanceOfAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "getMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToCheck",
          "type": "address"
        }
      ],
      "name": "holdsRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToRemove",
          "type": "address"
        }
      ],
      "name": "removeMember",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "resetMember",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "snapshot",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "snapshotId",
          "type": "uint256"
        }
      ],
      "name": "totalSupplyAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"Snapshot\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"getMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToCheck\",\"type\":\"address\"}],\"name\":\"holdsRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToRemove\",\"type\":\"address\"}],\"name\":\"removeMember\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"resetMember\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Supports snapshotting and allows the Oracle to mint new tokens as rewards.\",\"methods\":{\"addMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, shared role or if the caller is not a member of the managing role for `roleId`.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `value` tokens owned by `msg.sender`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getMember(uint256)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, exclusive role.\"},\"holdsRole(uint256,address)\":{\"details\":\"Reverts if roleId does not correspond to an initialized role.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Mints `value` tokens to `recipient`, returning true on success.\"},\"removeMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, shared role or if the caller is not a member of the managing role for `roleId`.\"},\"resetMember(uint256,address)\":{\"details\":\"Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, exclusive role.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"}},\"title\":\"Ownership of this token allows a voter to respond to price requests.\"},\"userdoc\":{\"methods\":{\"addMember(uint256,address)\":{\"notice\":\"Adds `newMember` to the shared role, `roleId`.\"},\"getMember(uint256)\":{\"notice\":\"Gets the current holder of the exclusive role, `roleId`.\"},\"holdsRole(uint256,address)\":{\"notice\":\"Whether `memberToCheck` is a member of roleId.\"},\"removeMember(uint256,address)\":{\"notice\":\"Removes `memberToRemove` from the shared role, `roleId`.\"},\"resetMember(uint256,address)\":{\"notice\":\"Changes the exclusive role holder of `roleId` to `newMember`.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/ptare/protocol/core/contracts/VotingToken.sol\":\"VotingToken\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ptare/protocol/core/contracts/ExpandedIERC20.sol\":{\"keccak256\":\"0x65ba8abc972d43b007ab745d67aba9e244572167b1f8e261fabf2c6d1a837473\",\"urls\":[\"bzz-raw://e91b7bafd7db6e0840a911c4c28fa1eedd5fe2fe3fecc41bf6fe9485b19b2d59\",\"dweb:/ipfs/QmaX6tUvZVcEq4jphYPJYWNDqTQdAfz11eYS8bq4748KKF\"]},\"/Users/ptare/protocol/core/contracts/MultiRole.sol\":{\"keccak256\":\"0xa66e77338b289f7f247819d6e19fec3d16c5c45cc149452183fbbb1d9883ecd0\",\"urls\":[\"bzz-raw://dbfdf45c05f4eda7411249ee1653ad48a3a76d1af6591379958cb6cce25f69bc\",\"dweb:/ipfs/QmYzFaG5dbNMu99V7dF4aFf93SwCWxFpc4bgAWF55R9tsV\"]},\"/Users/ptare/protocol/core/contracts/VotingToken.sol\":{\"keccak256\":\"0xb86ce022a7e0619feecc7e21de073ca458e8245cfcb936235d3f0fada6f4b143\",\"urls\":[\"bzz-raw://ba6934e05ef7f457f09a38dee8a25d664ea7debe616b40d9f90a0b513d8448ac\",\"dweb:/ipfs/QmUDA3eDWzLF76hMnu62NiXhp8vgBFoor4eSqvugbmadLo\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"@openzeppelin/contracts/drafts/Counters.sol\":{\"keccak256\":\"0xf1267d23aae72ba9bef7bbef542a658645e1e2a125d107978a0907f6693d43a1\",\"urls\":[\"bzz-raw://35227fc5f4ed2b123ba30d04b8887b7b8e0c492e3947663c08b2bc310e4da17e\",\"dweb:/ipfs/QmYGavckDLSHAtxSXpGgCWzAdAFdeMDDALJdeJawyqP1Ha\"]},\"@openzeppelin/contracts/drafts/ERC20Snapshot.sol\":{\"keccak256\":\"0xb2fea9da3317481b66e4184e8b719b8bf1f4061f94b4e750560ba0ec15d79ed8\",\"urls\":[\"bzz-raw://65678e80858d791a639262b935e1f83024d12ab750bb2f0633f127c3976edc86\",\"dweb:/ipfs/QmSDSKTTmejZ5vYaKrXcJPrPRueeuqyWCKbq1BTw4Gi7M8\"]},\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0x4b5aa451e4e8801478708f94b118a7821c0500d676255eaf89fc78c14856ce4e\",\"urls\":[\"bzz-raw://bed15b3f35ed05505efc8fb5cb01d06c52230fbcaadf4ed24a85b1ac2f15f33c\",\"dweb:/ipfs/QmS6tW81u8E4tvzVfVuqEuMCkdwAozQ6pKJPRBR4JEVmQp\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x65a4078c03875c25413a068ce9cfdd7e68a90f8786612d1189c89341e6e3b802\",\"urls\":[\"bzz-raw://45c0d95495b944fbb1aa09d900b0ab530903a432125ab8fddfa05064a7988991\",\"dweb:/ipfs/Qma2VeknkKA1THeubGzshWFk44BktXkXP1UKp9Un2uDSsu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x2745c69d2609b4cb8015e3e515985fdabb8425259252d670e9479757e84d8244\",\"urls\":[\"bzz-raw://56b85e40979a3e6eab7e9f410001a6749b22c1b1e685601cf87704abcc169a60\",\"dweb:/ipfs/QmQXm7paHzsSH4tDQvQW6vb88xXFY7WxPua4ND5GbzFmyn\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200003f600060028111156200002457fe5b600060028111156200003257fe5b336200010060201b60201c565b6200009d600160028111156200005157fe5b600060028111156200005f57fe5b6000604051908082528060200260200182016040528015620000905781602001602082028038833980820191505090505b50620002b560201b60201c565b620000fa600280811115620000ae57fe5b60006002811115620000bc57fe5b6000604051908082528060200260200182016040528015620000ed5781602001602082028038833980820191505090505b50620002b560201b60201c565b620005f6565b82600060028111156200010f57fe5b6007600083815260200190815260200160002060010160009054906101000a900460ff1660028111156200013f57fe5b14620001b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000081525060200191505060405180910390fd5b600060076000868152602001908152602001600020905060018160010160006101000a81548160ff02191690836002811115620001ec57fe5b02179055508381600001819055506200021783826002016200046a60201b620024101790919060201c565b600060028111156200022557fe5b6007600086815260200190815260200160002060010160009054906101000a900460ff1660028111156200025557fe5b1415620002ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c81526020018062002c9f603c913960400191505060405180910390fd5b5050505050565b8260006002811115620002c457fe5b6007600083815260200190815260200160002060010160009054906101000a900460ff166002811115620002f457fe5b1462000368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000081525060200191505060405180910390fd5b600060076000868152602001908152602001600020905060028160010160006101000a81548160ff02191690836002811115620003a157fe5b0217905550838160000181905550620003cc83826003016200048060201b6200241e1790919060201c565b60006002811115620003da57fe5b6007600086815260200190815260200160002060010160009054906101000a900460ff1660028111156200040a57fe5b141562000463576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603881526020018062002cfe6038913960400191505060405180910390fd5b5050505050565b6200047c8282620004c960201b60201c565b5050565b60008090505b8151811015620004c457620004b683838381518110620004a257fe5b60200260200101516200059860201b60201c565b808060010191505062000486565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141562000551576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018062002cdb6023913960400191505060405180910390fd5b808260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b61269980620006066000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b8578063981b24d01161007c578063981b24d014610644578063a457c2d714610686578063a9059cbb146106ec578063ab3545e514610752578063d97c05be146107c0578063dd62ed3e1461080e57610137565b806370a082311461049757806374d0a676146104ef5780637cdc1cb91461053d57806395d89b41146105a35780639711715a1461062657610137565b806339509351116100ff57806339509351146102ed57806340c10f191461035357806342966c68146103b95780634ee2cd7e146103e75780636be7658b1461044957610137565b806306fdde031461013c578063095ea7b3146101bf57806318160ddd1461022557806323b872dd14610243578063313ce567146102c9575b600080fd5b610144610886565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610184578082015181840152602081019050610169565b50505050905090810190601f1680156101b15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61020b600480360360408110156101d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108bf565b604051808215151515815260200191505060405180910390f35b61022d6108dd565b6040518082815260200191505060405180910390f35b6102af6004803603606081101561025957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108e7565b604051808215151515815260200191505060405180910390f35b6102d16109c0565b604051808260ff1660ff16815260200191505060405180910390f35b6103396004803603604081101561030357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109c5565b604051808215151515815260200191505060405180910390f35b61039f6004803603604081101561036957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a78565b604051808215151515815260200191505060405180910390f35b6103e5600480360360208110156103cf57600080fd5b8101908080359060200190929190505050610afb565b005b610433600480360360408110156103fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b74565b6040518082815260200191505060405180910390f35b6104956004803603604081101561045f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610be4565b005b6104d9600480360360208110156104ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d1a565b6040518082815260200191505060405180910390f35b61053b6004803603604081101561050557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d62565b005b6105896004803603604081101561055357600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e98565b604051808215151515815260200191505060405180910390f35b6105ab610fc7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105eb5780820151818401526020810190506105d0565b50505050905090810190601f1680156106185780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61062e611000565b6040518082815260200191505060405180910390f35b6106706004803603602081101561065a57600080fd5b8101908080359060200190929190505050611058565b6040518082815260200191505060405180910390f35b6106d26004803603604081101561069c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611089565b604051808215151515815260200191505060405180910390f35b6107386004803603604081101561070257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611156565b604051808215151515815260200191505060405180910390f35b61077e6004803603602081101561076857600080fd5b8101908080359060200190929190505050611174565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61080c600480360360408110156107d657600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061122f565b005b6108706004803603604081101561082457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611366565b6040518082815260200191505060405180910390f35b6040518060400160405280601381526020017f554d4120566f74696e6720546f6b656e2076310000000000000000000000000081525081565b60006108d36108cc6113ed565b84846113f5565b6001905092915050565b6000600254905090565b60006108f48484846115ec565b6109b5846109006113ed565b6109b08560405180606001604052806028815260200161256760289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006109666113ed565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461160e9092919063ffffffff16565b6113f5565b600190509392505050565b601281565b6000610a6e6109d26113ed565b84610a6985600160006109e36113ed565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116ce90919063ffffffff16565b6113f5565b6001905092915050565b600060016002811115610a8757fe5b610a918133610e98565b610ae6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806125456022913960400191505060405180910390fd5b610af08484611756565b600191505092915050565b600280811115610b0757fe5b610b118133610e98565b610b66576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806125456022913960400191505060405180910390fd5b610b703383611775565b5050565b6000806000610bc184600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611794565b9150915081610bd857610bd385610d1a565b610bda565b805b9250505092915050565b81600280811115610bf157fe5b6007600083815260200190815260200160002060010160009054906101000a900460ff166002811115610c2057fe5b14610c76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612519602c913960400191505060405180910390fd5b82610c97600760008381526020019081526020016000206000015433610e98565b610cec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061261c6024913960400191505060405180910390fd5b610d1483600760008781526020019081526020016000206003016118ee90919063ffffffff16565b50505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b81600280811115610d6f57fe5b6007600083815260200190815260200160002060010160009054906101000a900460ff166002811115610d9e57fe5b14610df4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612519602c913960400191505060405180910390fd5b82610e15600760008381526020019081526020016000206000015433610e98565b610e6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061261c6024913960400191505060405180910390fd5b610e92836007600087815260200190815260200160002060030161194c90919063ffffffff16565b50505050565b60008060076000858152602001908152602001600020905060016002811115610ebd57fe5b8160010160009054906101000a900460ff166002811115610eda57fe5b1415610efe57610ef683826002016119aa90919063ffffffff16565b915050610fc1565b600280811115610f0a57fe5b8160010160009054906101000a900460ff166002811115610f2757fe5b1415610f4b57610f438382600301611a0790919063ffffffff16565b915050610fc1565b6000610fbf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f496e76616c696420726f6c65496400000000000000000000000000000000000081525060200191505060405180910390fd5b505b92915050565b6040518060400160405280600381526020017f554d41000000000000000000000000000000000000000000000000000000000081525081565b600061100c6006611a60565b60006110186006611a76565b90507f8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb67816040518082815260200191505060405180910390a18091505090565b6000806000611068846004611794565b915091508161107e576110796108dd565b611080565b805b92505050919050565b600061114c6110966113ed565b846111478560405180606001604052806025815260200161264060259139600160006110c06113ed565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461160e9092919063ffffffff16565b6113f5565b6001905092915050565b600061116a6111636113ed565b84846115ec565b6001905092915050565b6000816001600281111561118457fe5b6007600083815260200190815260200160002060010160009054906101000a900460ff1660028111156111b357fe5b14611209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806124ea602f913960400191505060405180910390fd5b61122760076000858152602001908152602001600020600201611a84565b915050919050565b816001600281111561123d57fe5b6007600083815260200190815260200160002060010160009054906101000a900460ff16600281111561126c57fe5b146112c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806124ea602f913960400191505060405180910390fd5b826112e3600760008381526020019081526020016000206000015433610e98565b611338576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061261c6024913960400191505060405180910390fd5b6113608360076000878152602001908152602001600020600201611ab290919063ffffffff16565b50505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561147b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806125f86024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611501576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806124a26022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6115f583611b7f565b6115fe82611b7f565b611609838383611bd2565b505050565b60008383111582906116bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611680578082015181840152602081019050611665565b50505050905090810190601f1680156116ad5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008082840190508381101561174c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b61175f82611b7f565b611767611e88565b6117718282611e9c565b5050565b61177e82611b7f565b611786611e88565b6117908282612057565b5050565b6000806000841161180d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4552433230536e617073686f743a20696420697320300000000000000000000081525060200191505060405180910390fd5b6118176006611a76565b84111561188c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4552433230536e617073686f743a206e6f6e6578697374656e7420696400000081525060200191505060405180910390fd5b60006118a4858560000161220f90919063ffffffff16565b905083600001805490508114156118c55760008080905092509250506118e7565b60018460010182815481106118d657fe5b906000526020600020015492509250505b9250929050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008173ffffffffffffffffffffffffffffffffffffffff168360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6001816000016000828254019250508190555050565b600081600001549050919050565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611b38576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806125b06023913960400191505060405180910390fd5b808260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b611bcf600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611bca83610d1a565b6122c4565b50565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611c58576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806125d36025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611cde576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061245d6023913960400191505060405180910390fd5b611d49816040518060600160405280602681526020016124c4602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461160e9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ddc816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116ce90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b611e9a6004611e956108dd565b6122c4565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611f54816002546116ce90919063ffffffff16565b600281905550611fab816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116ce90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156120dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061258f6021913960400191505060405180910390fd5b61214881604051806060016040528060228152602001612480602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461160e9092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061219f8160025461234790919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000808380549050141561222657600090506122be565b60008090506000848054905090505b8082101561227e5760006122498383612391565b90508486828154811061225857fe5b9060005260206000200154111561227157809150612278565b6001810192505b50612235565b6000821180156122a657508385600184038154811061229957fe5b9060005260206000200154145b156122b85760018203925050506122be565b81925050505b92915050565b60006122d06006611a76565b9050806122df846000016123d3565b10156123425782600001819080600181540180825580915050906001820390600052602060002001600090919290919091505550826001018290806001815401808255809150509060018203906000526020600020016000909192909190915055505b505050565b600061238983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061160e565b905092915050565b6000600280838161239e57fe5b06600285816123a957fe5b0601816123b257fe5b04600283816123bd57fe5b04600285816123c857fe5b040101905092915050565b600080828054905014156123ea576000905061240b565b816001838054905003815481106123fd57fe5b906000526020600020015490505b919050565b61241a8282611ab2565b5050565b60008090505b81518110156124575761244a8383838151811061243d57fe5b602002602001015161194c565b8080600101915050612424565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737343616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783045524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737343616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e6167657245524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158207950c81be83ad62749118e98cd5940c4a3a4300902b69a014fe9bf31fc427ccc64736f6c634300050d0032417474656d7074656420746f2075736520616e20696e76616c696420726f6c6520746f206d616e61676520616e206578636c757369766520726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f20307830417474656d7074656420746f2075736520616e20696e76616c696420726f6c6520746f206d616e61676520612073686172656420726f6c65",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b8578063981b24d01161007c578063981b24d014610644578063a457c2d714610686578063a9059cbb146106ec578063ab3545e514610752578063d97c05be146107c0578063dd62ed3e1461080e57610137565b806370a082311461049757806374d0a676146104ef5780637cdc1cb91461053d57806395d89b41146105a35780639711715a1461062657610137565b806339509351116100ff57806339509351146102ed57806340c10f191461035357806342966c68146103b95780634ee2cd7e146103e75780636be7658b1461044957610137565b806306fdde031461013c578063095ea7b3146101bf57806318160ddd1461022557806323b872dd14610243578063313ce567146102c9575b600080fd5b610144610886565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610184578082015181840152602081019050610169565b50505050905090810190601f1680156101b15780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61020b600480360360408110156101d557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108bf565b604051808215151515815260200191505060405180910390f35b61022d6108dd565b6040518082815260200191505060405180910390f35b6102af6004803603606081101561025957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108e7565b604051808215151515815260200191505060405180910390f35b6102d16109c0565b604051808260ff1660ff16815260200191505060405180910390f35b6103396004803603604081101561030357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506109c5565b604051808215151515815260200191505060405180910390f35b61039f6004803603604081101561036957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610a78565b604051808215151515815260200191505060405180910390f35b6103e5600480360360208110156103cf57600080fd5b8101908080359060200190929190505050610afb565b005b610433600480360360408110156103fd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610b74565b6040518082815260200191505060405180910390f35b6104956004803603604081101561045f57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610be4565b005b6104d9600480360360208110156104ad57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d1a565b6040518082815260200191505060405180910390f35b61053b6004803603604081101561050557600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d62565b005b6105896004803603604081101561055357600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610e98565b604051808215151515815260200191505060405180910390f35b6105ab610fc7565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156105eb5780820151818401526020810190506105d0565b50505050905090810190601f1680156106185780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61062e611000565b6040518082815260200191505060405180910390f35b6106706004803603602081101561065a57600080fd5b8101908080359060200190929190505050611058565b6040518082815260200191505060405180910390f35b6106d26004803603604081101561069c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611089565b604051808215151515815260200191505060405180910390f35b6107386004803603604081101561070257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611156565b604051808215151515815260200191505060405180910390f35b61077e6004803603602081101561076857600080fd5b8101908080359060200190929190505050611174565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61080c600480360360408110156107d657600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061122f565b005b6108706004803603604081101561082457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611366565b6040518082815260200191505060405180910390f35b6040518060400160405280601381526020017f554d4120566f74696e6720546f6b656e2076310000000000000000000000000081525081565b60006108d36108cc6113ed565b84846113f5565b6001905092915050565b6000600254905090565b60006108f48484846115ec565b6109b5846109006113ed565b6109b08560405180606001604052806028815260200161256760289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006109666113ed565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461160e9092919063ffffffff16565b6113f5565b600190509392505050565b601281565b6000610a6e6109d26113ed565b84610a6985600160006109e36113ed565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116ce90919063ffffffff16565b6113f5565b6001905092915050565b600060016002811115610a8757fe5b610a918133610e98565b610ae6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806125456022913960400191505060405180910390fd5b610af08484611756565b600191505092915050565b600280811115610b0757fe5b610b118133610e98565b610b66576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806125456022913960400191505060405180910390fd5b610b703383611775565b5050565b6000806000610bc184600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611794565b9150915081610bd857610bd385610d1a565b610bda565b805b9250505092915050565b81600280811115610bf157fe5b6007600083815260200190815260200160002060010160009054906101000a900460ff166002811115610c2057fe5b14610c76576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612519602c913960400191505060405180910390fd5b82610c97600760008381526020019081526020016000206000015433610e98565b610cec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061261c6024913960400191505060405180910390fd5b610d1483600760008781526020019081526020016000206003016118ee90919063ffffffff16565b50505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b81600280811115610d6f57fe5b6007600083815260200190815260200160002060010160009054906101000a900460ff166002811115610d9e57fe5b14610df4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612519602c913960400191505060405180910390fd5b82610e15600760008381526020019081526020016000206000015433610e98565b610e6a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061261c6024913960400191505060405180910390fd5b610e92836007600087815260200190815260200160002060030161194c90919063ffffffff16565b50505050565b60008060076000858152602001908152602001600020905060016002811115610ebd57fe5b8160010160009054906101000a900460ff166002811115610eda57fe5b1415610efe57610ef683826002016119aa90919063ffffffff16565b915050610fc1565b600280811115610f0a57fe5b8160010160009054906101000a900460ff166002811115610f2757fe5b1415610f4b57610f438382600301611a0790919063ffffffff16565b915050610fc1565b6000610fbf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f496e76616c696420726f6c65496400000000000000000000000000000000000081525060200191505060405180910390fd5b505b92915050565b6040518060400160405280600381526020017f554d41000000000000000000000000000000000000000000000000000000000081525081565b600061100c6006611a60565b60006110186006611a76565b90507f8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb67816040518082815260200191505060405180910390a18091505090565b6000806000611068846004611794565b915091508161107e576110796108dd565b611080565b805b92505050919050565b600061114c6110966113ed565b846111478560405180606001604052806025815260200161264060259139600160006110c06113ed565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461160e9092919063ffffffff16565b6113f5565b6001905092915050565b600061116a6111636113ed565b84846115ec565b6001905092915050565b6000816001600281111561118457fe5b6007600083815260200190815260200160002060010160009054906101000a900460ff1660028111156111b357fe5b14611209576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806124ea602f913960400191505060405180910390fd5b61122760076000858152602001908152602001600020600201611a84565b915050919050565b816001600281111561123d57fe5b6007600083815260200190815260200160002060010160009054906101000a900460ff16600281111561126c57fe5b146112c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f8152602001806124ea602f913960400191505060405180910390fd5b826112e3600760008381526020019081526020016000206000015433610e98565b611338576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602481526020018061261c6024913960400191505060405180910390fd5b6113608360076000878152602001908152602001600020600201611ab290919063ffffffff16565b50505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561147b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806125f86024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611501576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806124a26022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b6115f583611b7f565b6115fe82611b7f565b611609838383611bd2565b505050565b60008383111582906116bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611680578082015181840152602081019050611665565b50505050905090810190601f1680156116ad5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008082840190508381101561174c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b61175f82611b7f565b611767611e88565b6117718282611e9c565b5050565b61177e82611b7f565b611786611e88565b6117908282612057565b5050565b6000806000841161180d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f4552433230536e617073686f743a20696420697320300000000000000000000081525060200191505060405180910390fd5b6118176006611a76565b84111561188c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4552433230536e617073686f743a206e6f6e6578697374656e7420696400000081525060200191505060405180910390fd5b60006118a4858560000161220f90919063ffffffff16565b905083600001805490508114156118c55760008080905092509250506118e7565b60018460010182815481106118d657fe5b906000526020600020015492509250505b9250929050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008173ffffffffffffffffffffffffffffffffffffffff168360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6001816000016000828254019250508190555050565b600081600001549050919050565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611b38576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806125b06023913960400191505060405180910390fd5b808260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b611bcf600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020611bca83610d1a565b6122c4565b50565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611c58576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806125d36025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611cde576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061245d6023913960400191505060405180910390fd5b611d49816040518060600160405280602681526020016124c4602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461160e9092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550611ddc816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116ce90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b611e9a6004611e956108dd565b6122c4565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611f3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b611f54816002546116ce90919063ffffffff16565b600281905550611fab816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546116ce90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156120dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061258f6021913960400191505060405180910390fd5b61214881604051806060016040528060228152602001612480602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461160e9092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061219f8160025461234790919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b6000808380549050141561222657600090506122be565b60008090506000848054905090505b8082101561227e5760006122498383612391565b90508486828154811061225857fe5b9060005260206000200154111561227157809150612278565b6001810192505b50612235565b6000821180156122a657508385600184038154811061229957fe5b9060005260206000200154145b156122b85760018203925050506122be565b81925050505b92915050565b60006122d06006611a76565b9050806122df846000016123d3565b10156123425782600001819080600181540180825580915050906001820390600052602060002001600090919290919091505550826001018290806001815401808255809150509060018203906000526020600020016000909192909190915055505b505050565b600061238983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061160e565b905092915050565b6000600280838161239e57fe5b06600285816123a957fe5b0601816123b257fe5b04600283816123bd57fe5b04600285816123c857fe5b040101905092915050565b600080828054905014156123ea576000905061240b565b816001838054905003815481106123fd57fe5b906000526020600020015490505b919050565b61241a8282611ab2565b5050565b60008090505b81518110156124575761244a8383838151811061243d57fe5b602002602001015161194c565b8080600101915050612424565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737343616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783045524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737343616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e6167657245524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa265627a7a723158207950c81be83ad62749118e98cd5940c4a3a4300902b69a014fe9bf31fc427ccc64736f6c634300050d0032",
  "sourceMap": "314:1331:31:-;;;915:276;8:9:-1;5:2;;;30:1;27;20:12;5:2;915:276:31;946:70;972:11;967:17;;;;;;;;991:11;986:17;;;;;;;;1005:10;946:20;;;:70;;:::i;:::-;1026:74;1049:12;1044:18;;;;;;;;1069:11;1064:17;;;;;;;;1097:1;1083:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1083:16:31;;;;1026:17;;;:74;;:::i;:::-;1110;1133:12;1128:18;;;;;;;;1153:11;1148:17;;;;;;;;1181:1;1167:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1167:16:31;;;;1110:17;;;:74;;:::i;:::-;314:1331;;6966:481:14;7094:6;5747:16;5721:42;;;;;;;;:5;:13;5727:6;5721:13;;;;;;;;;;;:22;;;;;;;;;;;;:42;;;;;;;;;5713:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7116:17;7136:5;:13;7142:6;7136:13;;;;;;;;;;;7116:33;;7175:18;7159:4;:13;;;:34;;;;;;;;;;;;;;;;;;;;;;;;7223:14;7203:4;:17;;:34;;;;7247:48;7281:13;7247:4;:28;;:33;;;;;;:48;;;;:::i;:::-;7347:16;7313:50;;;;;;;;:5;:21;7319:14;7313:21;;;;;;;;;;;:30;;;;;;;;;;;;:50;;;;;;;;;;7305:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5808:1;6966:481;;;;:::o;6150:479::-;6285:6;5747:16;5721:42;;;;;;;;:5;:13;5727:6;5721:13;;;;;;;;;;;:22;;;;;;;;;;;;:42;;;;;;;;;5713:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6307:17;6327:5;:13;6333:6;6327:13;;;;;;;;;;;6307:33;;6366:15;6350:4;:13;;;:31;;;;;;;;;;;;;;;;;;;;;;;;6411:14;6391:4;:17;;:34;;;;6435:46;6466:14;6435:4;:25;;:30;;;;;;:46;;;;:::i;:::-;6533:16;6499:50;;;;;;;;:5;:21;6505:14;6499:21;;;;;;;;;;;:30;;;;;;;;;;;;:50;;;;;;;;;;6491:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5808:1;6150:479;;;;:::o;654:144::-;749:42;761:14;777:13;749:11;;;:42;;:::i;:::-;654:144;;:::o;1393:229::-;1503:6;1512:1;1503:10;;1498:118;1519:14;:21;1515:1;:25;1498:118;;;1561:44;1571:14;1587;1602:1;1587:17;;;;;;;;;;;;;;1561:9;;;:44;;:::i;:::-;1542:3;;;;;;;1498:118;;;;1393:229;;:::o;286:221::-;413:3;392:25;;:9;:25;;;;384:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;491:9;467:14;:21;;;:33;;;;;;;;;;;;;;;;;;286:221;;:::o;1077:147::-;1213:4;1175:14;:22;;:35;1198:11;1175:35;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;1077:147;;:::o;314:1331:31:-;;;;;;;",
  "deployedSourceMap": "314:1331:31:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;314:1331:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;638:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;638:51:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2500:149:49;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2500:149:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1559:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3107:300;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3107:300:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;828:35:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3802:207:49;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3802:207:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1289:165:31;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1289:165:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1532:111;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1532:111:31;;;;;;;;;;;;;;;;;:::i;:::-;;2183:254:44;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2183:254:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5173:189:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5173:189:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1706:108:49;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1706:108:49;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4752:173:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4752:173:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3320:433;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3320:433:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;740:37:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;740:37:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1966:211:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2443:221;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2443:221:44;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4496:258:49;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4496:258:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2017:155;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2017:155:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4357:157:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4357:157:14;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3997:183;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3997:183:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2230:132:49;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2230:132:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;638:51:31;;;;;;;;;;;;;;;;;;;:::o;2500:149:49:-;2566:4;2582:39;2591:12;:10;:12::i;:::-;2605:7;2614:6;2582:8;:39::i;:::-;2638:4;2631:11;;2500:149;;;;:::o;1559:89::-;1603:7;1629:12;;1622:19;;1559:89;:::o;3107:300::-;3196:4;3212:36;3222:6;3230:9;3241:6;3212:9;:36::i;:::-;3258:121;3267:6;3275:12;:10;:12::i;:::-;3289:89;3327:6;3289:89;;;;;;;;;;;;;;;;;:11;:19;3301:6;3289:19;;;;;;;;;;;;;;;:33;3309:12;:10;:12::i;:::-;3289:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;3258:8;:121::i;:::-;3396:4;3389:11;;3107:300;;;;;:::o;828:35:31:-;861:2;828:35;:::o;3802:207:49:-;3882:4;3898:83;3907:12;:10;:12::i;:::-;3921:7;3930:50;3969:10;3930:11;:25;3942:12;:10;:12::i;:::-;3930:25;;;;;;;;;;;;;;;:34;3956:7;3930:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;3898:8;:83::i;:::-;3998:4;3991:11;;3802:207;;;;:::o;1289:165:31:-;1387:4;1363:12;1358:18;;;;;;;;2251:29:14;2261:6;2269:10;2251:9;:29::i;:::-;2243:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1403:23:31;1409:9;1420:5;1403;:23::i;:::-;1443:4;1436:11;;1289:165;;;;;:::o;1532:111::-;1587:12;1582:18;;;;;;;;2251:29:14;2261:6;2269:10;2251:9;:29::i;:::-;2243:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1612:24:31;1618:10;1630:5;1612;:24::i;:::-;1532:111;;:::o;2183:254:44:-;2262:7;2282:16;2300:13;2317:55;2326:10;2338:24;:33;2363:7;2338:33;;;;;;;;;;;;;;;2317:8;:55::i;:::-;2281:91;;;;2390:11;:40;;2412:18;2422:7;2412:9;:18::i;:::-;2390:40;;;2404:5;2390:40;2383:47;;;;2183:254;;;;:::o;5173:189:14:-;5250:6;3080:15;3054:41;;;;;;;;:5;:13;3060:6;3054:13;;;;;;;;;;;:22;;;;;;;;;;;;:41;;;;;;;;;3046:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5274:6;2514:49;2524:5;:13;2530:6;2524:13;;;;;;;;;;;:26;;;2552:10;2514:9;:49::i;:::-;2506:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5292:63;5340:14;5292:5;:13;5298:6;5292:13;;;;;;;;;;;:34;;:47;;:63;;;;:::i;:::-;3154:1;5173:189;;;:::o;1706:108:49:-;1763:7;1789:9;:18;1799:7;1789:18;;;;;;;;;;;;;;;;1782:25;;1706:108;;;:::o;4752:173:14:-;4821:6;3080:15;3054:41;;;;;;;;:5;:13;3060:6;3054:13;;;;;;;;;;;:22;;;;;;;;;;;;:41;;;;;;;;;3046:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4845:6;2514:49;2524:5;:13;2530:6;2524:13;;;;;;;;;;;:26;;;2552:10;2514:9;:49::i;:::-;2506:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4863:55;4908:9;4863:5;:13;4869:6;4863:13;;;;;;;;;;;:34;;:44;;:55;;;;:::i;:::-;3154:1;4752:173;;;:::o;3320:433::-;3396:4;3412:17;3432:5;:13;3438:6;3432:13;;;;;;;;;;;3412:33;;3476:18;3459:35;;;;;;;;:4;:13;;;;;;;;;;;;:35;;;;;;;;;3455:250;;;3517:52;3555:13;3517:4;:28;;:37;;:52;;;;:::i;:::-;3510:59;;;;;3455:250;3607:15;3590:32;;;;;;;;:4;:13;;;;;;;;;;;;:32;;;;;;;;;3586:119;;;3645:49;3680:13;3645:4;:25;;:34;;:49;;;;:::i;:::-;3638:56;;;;;3586:119;3722:5;3714:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3320:433;;;;;;:::o;740:37:31:-;;;;;;;;;;;;;;;;;;;:::o;1966:211:44:-;2002:7;2021:30;:18;:28;:30::i;:::-;2062:17;2082:28;:18;:26;:28::i;:::-;2062:48;;2125:19;2134:9;2125:19;;;;;;;;;;;;;;;;;;2161:9;2154:16;;;1966:211;:::o;2443:221::-;2506:7;2526:16;2544:13;2561:43;2570:10;2582:21;2561:8;:43::i;:::-;2525:79;;;;2622:11;:35;;2644:13;:11;:13::i;:::-;2622:35;;;2636:5;2622:35;2615:42;;;;2443:221;;;:::o;4496:258:49:-;4581:4;4597:129;4606:12;:10;:12::i;:::-;4620:7;4629:96;4668:15;4629:96;;;;;;;;;;;;;;;;;:11;:25;4641:12;:10;:12::i;:::-;4629:25;;;;;;;;;;;;;;;:34;4655:7;4629:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;4597:8;:129::i;:::-;4743:4;4736:11;;4496:258;;;;:::o;2017:155::-;2086:4;2102:42;2112:12;:10;:12::i;:::-;2126:9;2137:6;2102:9;:42::i;:::-;2161:4;2154:11;;2017:155;;;;:::o;4357:157:14:-;4432:7;4415:6;2810:18;2784:44;;;;;;;;:5;:13;2790:6;2784:13;;;;;;;;;;;:22;;;;;;;;;;;;:44;;;;;;;;;2776:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4458:49;:5;:13;4464:6;4458:13;;;;;;;;;;;:37;;:47;:49::i;:::-;4451:56;;4357:157;;;;:::o;3997:183::-;4071:6;2810:18;2784:44;;;;;;;;:5;:13;2790:6;2784:13;;;;;;;;;;;:22;;;;;;;;;;;;:44;;;;;;;;;2776:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4095:6;2514:49;2524:5;:13;2530:6;2524:13;;;;;;;;;;;:26;;;2552:10;2514:9;:49::i;:::-;2506:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4113:60;4163:9;4113:5;:13;4119:6;4113:13;;;;;;;;;;;:37;;:49;;:60;;;;:::i;:::-;2890:1;3997:183;;;:::o;2230:132:49:-;2302:7;2328:11;:18;2340:5;2328:18;;;;;;;;;;;;;;;:27;2347:7;2328:27;;;;;;;;;;;;;;;;2321:34;;2230:132;;;;:::o;788:96:42:-;833:15;867:10;860:17;;788:96;:::o;7351:332:49:-;7461:1;7444:19;;:5;:19;;;;7436:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7541:1;7522:21;;:7;:21;;;;7514:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7623:6;7593:11;:18;7605:5;7593:18;;;;;;;;;;;;;;;:27;7612:7;7593:27;;;;;;;;;;;;;;;:36;;;;7660:7;7644:32;;7653:5;7644:32;;;7669:6;7644:32;;;;;;;;;;;;;;;;;;7351:332;;;:::o;2967:193:44:-;3046:28;3069:4;3046:22;:28::i;:::-;3084:26;3107:2;3084:22;:26::i;:::-;3121:32;3137:4;3143:2;3147:5;3121:15;:32::i;:::-;2967:193;;;:::o;1732:187:47:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;3166:180:44:-;3232:31;3255:7;3232:22;:31::i;:::-;3273:28;:26;:28::i;:::-;3312:27;3324:7;3333:5;3312:11;:27::i;:::-;3166:180;;:::o;3352:::-;3418:31;3441:7;3418:22;:31::i;:::-;3459:28;:26;:28::i;:::-;3498:27;3510:7;3519:5;3498:11;:27::i;:::-;3352:180;;:::o;4597:552::-;4694:4;4700:7;4744:1;4731:10;:14;4723:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4857:28;:18;:26;:28::i;:::-;4843:10;:42;;4835:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4930:13;4946:40;4975:10;4946:9;:13;;:28;;:40;;;;:::i;:::-;4930:56;;5010:9;:13;;:20;;;;5001:5;:29;4997:146;;;5054:5;5061:1;5046:17;;;;;;;;;;4997:146;5102:4;5108:9;:16;;5125:5;5108:23;;;;;;;;;;;;;;;;5094:38;;;;;4597:552;;;;;;:::o;1230:157:14:-;1375:5;1334:14;:22;;:38;1357:14;1334:38;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;1230:157;;:::o;1077:147::-;1213:4;1175:14;:22;;:35;1198:11;1175:35;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;1077:147;;:::o;109:171::-;212:4;260:13;235:38;;:14;:21;;;;;;;;;;;;:38;;;228:45;;109:171;;;;:::o;901:170::-;1004:4;1027:14;:22;;:37;1050:13;1027:37;;;;;;;;;;;;;;;;;;;;;;;;;1020:44;;901:170;;;;:::o;1183:89:43:-;1264:1;1246:7;:14;;;:19;;;;;;;;;;;1183:89;:::o;1065:112::-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;513:135:14:-;594:7;620:14;:21;;;;;;;;;;;;613:28;;513:135;;;:::o;286:221::-;413:3;392:25;;:9;:25;;;;384:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;491:9;467:14;:21;;;:33;;;;;;;;;;;;;;;;;;286:221;;:::o;5155:144:44:-;5222:70;5238:24;:33;5263:7;5238:33;;;;;;;;;;;;;;;5273:18;5283:7;5273:9;:18::i;:::-;5222:15;:70::i;:::-;5155:144;:::o;5228:464:49:-;5343:1;5325:20;;:6;:20;;;;5317:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5426:1;5405:23;;:9;:23;;;;5397:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5499;5521:6;5499:71;;;;;;;;;;;;;;;;;:9;:17;5509:6;5499:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;5479:9;:17;5489:6;5479:17;;;;;;;;;;;;;;;:91;;;;5603:32;5628:6;5603:9;:20;5613:9;5603:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;5580:9;:20;5590:9;5580:20;;;;;;;;;;;;;;;:55;;;;5667:9;5650:35;;5659:6;5650:35;;;5678:6;5650:35;;;;;;;;;;;;;;;;;;5228:464;;;:::o;5305:116:44:-;5361:53;5377:21;5400:13;:11;:13::i;:::-;5361:15;:53::i;:::-;5305:116::o;5962:302:49:-;6056:1;6037:21;;:7;:21;;;;6029:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6120:24;6137:6;6120:12;;:16;;:24;;;;:::i;:::-;6105:12;:39;;;;6175:30;6198:6;6175:9;:18;6185:7;6175:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;6154:9;:18;6164:7;6154:18;;;;;;;;;;;;;;;:51;;;;6241:7;6220:37;;6237:1;6220:37;;;6250:6;6220:37;;;;;;;;;;;;;;;;;;5962:302;;:::o;6584:342::-;6678:1;6659:21;;:7;:21;;;;6651:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6750:68;6773:6;6750:68;;;;;;;;;;;;;;;;;:9;:18;6760:7;6750:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;6729:9;:18;6739:7;6729:18;;;;;;;;;;;;;;;:89;;;;6843:24;6860:6;6843:12;;:16;;:24;;;;:::i;:::-;6828:12;:39;;;;6908:1;6882:37;;6891:7;6882:37;;;6912:6;6882:37;;;;;;;;;;;;;;;;;;6584:342;;:::o;549:892:51:-;638:7;677:1;661:5;:12;;;;:17;657:56;;;701:1;694:8;;;;657:56;723:11;737:1;723:15;;748:12;763:5;:12;;;;748:27;;786:414;799:4;793:3;:10;786:414;;;819:11;833:23;846:3;851:4;833:12;:23::i;:::-;819:37;;1086:7;1073:5;1079:3;1073:10;;;;;;;;;;;;;;;;:20;1069:121;;;1120:3;1113:10;;1069:121;;;1174:1;1168:3;:7;1162:13;;1069:121;786:414;;;;1323:1;1317:3;:7;:36;;;;;1346:7;1328:5;1340:1;1334:3;:7;1328:14;;;;;;;;;;;;;;;;:25;1317:36;1313:122;;;1382:1;1376:3;:7;1369:14;;;;;;1313:122;1421:3;1414:10;;;;549:892;;;;;:::o;5427:309:44:-;5521:17;5541:28;:18;:26;:28::i;:::-;5521:48;;5616:9;5583:30;5599:9;:13;;5583:15;:30::i;:::-;:42;5579:151;;;5641:9;:13;;5660:9;5641:29;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5641:29:44;;;;;;;;;;;;;;;;;;;;;;5684:9;:16;;5706:12;5684:35;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5684:35:44;;;;;;;;;;;;;;;;;;;;;;5579:151;5427:309;;;:::o;1274:134:47:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;575:190:46:-;637:7;756:1;751;747;:5;;;;;;743:1;739;:5;;;;;;:13;738:19;;;;;;732:1;728;:5;;;;;;722:1;718;:5;;;;;;717:17;:41;710:48;;575:190;;;;:::o;5742:206:44:-;5812:7;5849:1;5835:3;:10;;;;:15;5831:111;;;5873:1;5866:8;;;;5831:111;5912:3;5929:1;5916:3;:10;;;;:14;5912:19;;;;;;;;;;;;;;;;5905:26;;5742:206;;;;:::o;654:144:14:-;749:42;761:14;777:13;749:11;:42::i;:::-;654:144;;:::o;1393:229::-;1503:6;1512:1;1503:10;;1498:118;1519:14;:21;1515:1;:25;1498:118;;;1561:44;1571:14;1587;1602:1;1587:17;;;;;;;;;;;;;;1561:9;:44::i;:::-;1542:3;;;;;;;1498:118;;;;1393:229;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./MultiRole.sol\";\nimport \"./ExpandedIERC20.sol\";\n\nimport \"@openzeppelin/contracts/drafts/ERC20Snapshot.sol\";\n\n\n/**\n * @title Ownership of this token allows a voter to respond to price requests.\n * @dev Supports snapshotting and allows the Oracle to mint new tokens as rewards.\n */\ncontract VotingToken is ExpandedIERC20, ERC20Snapshot, MultiRole {\n\n    enum Roles {\n        // Can set the minter and burner.\n        Owner,\n        // Addresses that can mint new tokens.\n        Minter,\n        // Addresses that can burn tokens that address owns.\n        Burner\n    }\n\n    // Standard ERC20 metadata.\n    string public constant name = \"UMA Voting Token v1\"; // solhint-disable-line const-name-snakecase\n    string public constant symbol = \"UMA\"; // solhint-disable-line const-name-snakecase\n    uint8 public constant decimals = 18; // solhint-disable-line const-name-snakecase\n\n    constructor() public {\n        _createExclusiveRole(uint(Roles.Owner), uint(Roles.Owner), msg.sender);\n        _createSharedRole(uint(Roles.Minter), uint(Roles.Owner), new address[](0));\n        _createSharedRole(uint(Roles.Burner), uint(Roles.Owner), new address[](0));\n    }\n\n    /**\n     * @dev Mints `value` tokens to `recipient`, returning true on success.\n     */\n    function mint(address recipient, uint value) external onlyRoleHolder(uint(Roles.Minter)) returns (bool) {\n        _mint(recipient, value);\n        return true;\n    }\n\n    /**\n     * @dev Burns `value` tokens owned by `msg.sender`.\n     */\n    function burn(uint value) external onlyRoleHolder(uint(Roles.Burner)) {\n        _burn(msg.sender, value);\n    }\n}\n",
  "sourcePath": "/Users/ptare/protocol/core/contracts/VotingToken.sol",
  "ast": {
    "absolutePath": "/Users/ptare/protocol/core/contracts/VotingToken.sol",
    "exportedSymbols": {
      "VotingToken": [
        10126
      ]
    },
    "id": 10127,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10013,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:31"
      },
      {
        "absolutePath": "/Users/ptare/protocol/core/contracts/MultiRole.sol",
        "file": "./MultiRole.sol",
        "id": 10014,
        "nodeType": "ImportDirective",
        "scope": 10127,
        "sourceUnit": 2583,
        "src": "25:25:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ptare/protocol/core/contracts/ExpandedIERC20.sol",
        "file": "./ExpandedIERC20.sol",
        "id": 10015,
        "nodeType": "ImportDirective",
        "scope": 10127,
        "sourceUnit": 778,
        "src": "51:30:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/drafts/ERC20Snapshot.sol",
        "file": "@openzeppelin/contracts/drafts/ERC20Snapshot.sol",
        "id": 10016,
        "nodeType": "ImportDirective",
        "scope": 10127,
        "sourceUnit": 11745,
        "src": "83:58:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10017,
              "name": "ExpandedIERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 777,
              "src": "338:14:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExpandedIERC20_$777",
                "typeString": "contract ExpandedIERC20"
              }
            },
            "id": 10018,
            "nodeType": "InheritanceSpecifier",
            "src": "338:14:31"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10019,
              "name": "ERC20Snapshot",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11744,
              "src": "354:13:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Snapshot_$11744",
                "typeString": "contract ERC20Snapshot"
              }
            },
            "id": 10020,
            "nodeType": "InheritanceSpecifier",
            "src": "354:13:31"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10021,
              "name": "MultiRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2582,
              "src": "369:9:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MultiRole_$2582",
                "typeString": "contract MultiRole"
              }
            },
            "id": 10022,
            "nodeType": "InheritanceSpecifier",
            "src": "369:9:31"
          }
        ],
        "contractDependencies": [
          777,
          2582,
          11370,
          11744,
          12693,
          12762
        ],
        "contractKind": "contract",
        "documentation": "@title Ownership of this token allows a voter to respond to price requests.\n@dev Supports snapshotting and allows the Oracle to mint new tokens as rewards.",
        "fullyImplemented": true,
        "id": 10126,
        "linearizedBaseContracts": [
          10126,
          2582,
          11744,
          12693,
          777,
          12762,
          11370
        ],
        "name": "VotingToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "VotingToken.Roles",
            "id": 10026,
            "members": [
              {
                "id": 10023,
                "name": "Owner",
                "nodeType": "EnumValue",
                "src": "449:5:31"
              },
              {
                "id": 10024,
                "name": "Minter",
                "nodeType": "EnumValue",
                "src": "511:6:31"
              },
              {
                "id": 10025,
                "name": "Burner",
                "nodeType": "EnumValue",
                "src": "588:6:31"
              }
            ],
            "name": "Roles",
            "nodeType": "EnumDefinition",
            "src": "386:214:31"
          },
          {
            "constant": true,
            "id": 10029,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 10126,
            "src": "638:51:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 10027,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "638:6:31",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "554d4120566f74696e6720546f6b656e207631",
              "id": 10028,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "668:21:31",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d5578958948002c5d9782b929c27cb99c67596a2ff29be3d651049901a6f113a",
                "typeString": "literal_string \"UMA Voting Token v1\""
              },
              "value": "UMA Voting Token v1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 10032,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 10126,
            "src": "740:37:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 10030,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "740:6:31",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "554d41",
              "id": 10031,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "772:5:31",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_bebbee9d39fececb0724ab1ef868a1430dbe5c23dd01c88e2707583165338b0d",
                "typeString": "literal_string \"UMA\""
              },
              "value": "UMA"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 10035,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 10126,
            "src": "828:35:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 10033,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "828:5:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 10034,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "861:2:31",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10083,
              "nodeType": "Block",
              "src": "936:255:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 10040,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10026,
                              "src": "972:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$10026_$",
                                "typeString": "type(enum VotingToken.Roles)"
                              }
                            },
                            "id": 10041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "972:11:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          ],
                          "id": 10039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "967:4:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 10042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "967:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 10044,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10026,
                              "src": "991:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$10026_$",
                                "typeString": "type(enum VotingToken.Roles)"
                              }
                            },
                            "id": 10045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "991:11:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          ],
                          "id": 10043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "986:4:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 10046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "986:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10047,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12860,
                          "src": "1005:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1005:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 10038,
                      "name": "_createExclusiveRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2581,
                      "src": "946:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 10049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "946:70:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10050,
                  "nodeType": "ExpressionStatement",
                  "src": "946:70:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 10053,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10026,
                              "src": "1049:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$10026_$",
                                "typeString": "type(enum VotingToken.Roles)"
                              }
                            },
                            "id": 10054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1049:12:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          ],
                          "id": 10052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1044:4:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 10055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1044:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 10057,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10026,
                              "src": "1069:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$10026_$",
                                "typeString": "type(enum VotingToken.Roles)"
                              }
                            },
                            "id": 10058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1069:11:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          ],
                          "id": 10056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1064:4:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 10059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1064:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1097:1:31",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1083:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                            "typeString": "function (uint256) pure returns (address[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 10060,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1087:7:31",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 10061,
                            "length": null,
                            "nodeType": "ArrayTypeName",
                            "src": "1087:9:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          }
                        },
                        "id": 10064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1083:16:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 10051,
                      "name": "_createSharedRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2530,
                      "src": "1026:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,address[] memory)"
                      }
                    },
                    "id": 10065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1026:74:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10066,
                  "nodeType": "ExpressionStatement",
                  "src": "1026:74:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 10069,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10026,
                              "src": "1133:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$10026_$",
                                "typeString": "type(enum VotingToken.Roles)"
                              }
                            },
                            "id": 10070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1133:12:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          ],
                          "id": 10068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1128:4:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 10071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1128:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 10073,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10026,
                              "src": "1153:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$10026_$",
                                "typeString": "type(enum VotingToken.Roles)"
                              }
                            },
                            "id": 10074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1153:11:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          ],
                          "id": 10072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1148:4:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 10075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1148:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1181:1:31",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1167:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                            "typeString": "function (uint256) pure returns (address[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 10076,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1171:7:31",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 10077,
                            "length": null,
                            "nodeType": "ArrayTypeName",
                            "src": "1171:9:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          }
                        },
                        "id": 10080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1167:16:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 10067,
                      "name": "_createSharedRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2530,
                      "src": "1110:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,address[] memory)"
                      }
                    },
                    "id": 10081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1110:74:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10082,
                  "nodeType": "ExpressionStatement",
                  "src": "1110:74:31"
                }
              ]
            },
            "documentation": null,
            "id": 10084,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "926:2:31"
            },
            "returnParameters": {
              "id": 10037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "936:0:31"
            },
            "scope": 10126,
            "src": "915:276:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10106,
              "nodeType": "Block",
              "src": "1393:61:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10100,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10086,
                        "src": "1409:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10101,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10088,
                        "src": "1420:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10099,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11578
                      ],
                      "referencedDeclaration": 11578,
                      "src": "1403:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1403:23:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10103,
                  "nodeType": "ExpressionStatement",
                  "src": "1403:23:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 10104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1443:4:31",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10098,
                  "id": 10105,
                  "nodeType": "Return",
                  "src": "1436:11:31"
                }
              ]
            },
            "documentation": "@dev Mints `value` tokens to `recipient`, returning true on success.",
            "id": 10107,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10092,
                          "name": "Roles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10026,
                          "src": "1363:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Roles_$10026_$",
                            "typeString": "type(enum VotingToken.Roles)"
                          }
                        },
                        "id": 10093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Minter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1363:12:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Roles_$10026",
                          "typeString": "enum VotingToken.Roles"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Roles_$10026",
                          "typeString": "enum VotingToken.Roles"
                        }
                      ],
                      "id": 10091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1358:4:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint"
                    },
                    "id": 10094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1358:18:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 10095,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10090,
                  "name": "onlyRoleHolder",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2261,
                  "src": "1343:14:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1343:34:31"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10086,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 10107,
                  "src": "1303:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1303:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10088,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 10107,
                  "src": "1322:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10087,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1322:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1302:31:31"
            },
            "returnParameters": {
              "id": 10098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10097,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10107,
                  "src": "1387:4:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10096,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1386:6:31"
            },
            "scope": 10126,
            "src": "1289:165:31",
            "stateMutability": "nonpayable",
            "superFunction": 776,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10124,
              "nodeType": "Block",
              "src": "1602:41:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10119,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12860,
                          "src": "1618:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1618:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10121,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10109,
                        "src": "1630:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10118,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11600
                      ],
                      "referencedDeclaration": 11600,
                      "src": "1612:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1612:24:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10123,
                  "nodeType": "ExpressionStatement",
                  "src": "1612:24:31"
                }
              ]
            },
            "documentation": "@dev Burns `value` tokens owned by `msg.sender`.",
            "id": 10125,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10113,
                          "name": "Roles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10026,
                          "src": "1587:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Roles_$10026_$",
                            "typeString": "type(enum VotingToken.Roles)"
                          }
                        },
                        "id": 10114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Burner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1587:12:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Roles_$10026",
                          "typeString": "enum VotingToken.Roles"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Roles_$10026",
                          "typeString": "enum VotingToken.Roles"
                        }
                      ],
                      "id": 10112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1582:4:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint"
                    },
                    "id": 10115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1582:18:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 10116,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10111,
                  "name": "onlyRoleHolder",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2261,
                  "src": "1567:14:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1567:34:31"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10109,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 10125,
                  "src": "1546:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10108,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1546:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1545:12:31"
            },
            "returnParameters": {
              "id": 10117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1602:0:31"
            },
            "scope": 10126,
            "src": "1532:111:31",
            "stateMutability": "nonpayable",
            "superFunction": 767,
            "visibility": "external"
          }
        ],
        "scope": 10127,
        "src": "314:1331:31"
      }
    ],
    "src": "0:1646:31"
  },
  "legacyAST": {
    "absolutePath": "/Users/ptare/protocol/core/contracts/VotingToken.sol",
    "exportedSymbols": {
      "VotingToken": [
        10126
      ]
    },
    "id": 10127,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10013,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:31"
      },
      {
        "absolutePath": "/Users/ptare/protocol/core/contracts/MultiRole.sol",
        "file": "./MultiRole.sol",
        "id": 10014,
        "nodeType": "ImportDirective",
        "scope": 10127,
        "sourceUnit": 2583,
        "src": "25:25:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ptare/protocol/core/contracts/ExpandedIERC20.sol",
        "file": "./ExpandedIERC20.sol",
        "id": 10015,
        "nodeType": "ImportDirective",
        "scope": 10127,
        "sourceUnit": 778,
        "src": "51:30:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/drafts/ERC20Snapshot.sol",
        "file": "@openzeppelin/contracts/drafts/ERC20Snapshot.sol",
        "id": 10016,
        "nodeType": "ImportDirective",
        "scope": 10127,
        "sourceUnit": 11745,
        "src": "83:58:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10017,
              "name": "ExpandedIERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 777,
              "src": "338:14:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExpandedIERC20_$777",
                "typeString": "contract ExpandedIERC20"
              }
            },
            "id": 10018,
            "nodeType": "InheritanceSpecifier",
            "src": "338:14:31"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10019,
              "name": "ERC20Snapshot",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11744,
              "src": "354:13:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Snapshot_$11744",
                "typeString": "contract ERC20Snapshot"
              }
            },
            "id": 10020,
            "nodeType": "InheritanceSpecifier",
            "src": "354:13:31"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 10021,
              "name": "MultiRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2582,
              "src": "369:9:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MultiRole_$2582",
                "typeString": "contract MultiRole"
              }
            },
            "id": 10022,
            "nodeType": "InheritanceSpecifier",
            "src": "369:9:31"
          }
        ],
        "contractDependencies": [
          777,
          2582,
          11370,
          11744,
          12693,
          12762
        ],
        "contractKind": "contract",
        "documentation": "@title Ownership of this token allows a voter to respond to price requests.\n@dev Supports snapshotting and allows the Oracle to mint new tokens as rewards.",
        "fullyImplemented": true,
        "id": 10126,
        "linearizedBaseContracts": [
          10126,
          2582,
          11744,
          12693,
          777,
          12762,
          11370
        ],
        "name": "VotingToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "VotingToken.Roles",
            "id": 10026,
            "members": [
              {
                "id": 10023,
                "name": "Owner",
                "nodeType": "EnumValue",
                "src": "449:5:31"
              },
              {
                "id": 10024,
                "name": "Minter",
                "nodeType": "EnumValue",
                "src": "511:6:31"
              },
              {
                "id": 10025,
                "name": "Burner",
                "nodeType": "EnumValue",
                "src": "588:6:31"
              }
            ],
            "name": "Roles",
            "nodeType": "EnumDefinition",
            "src": "386:214:31"
          },
          {
            "constant": true,
            "id": 10029,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 10126,
            "src": "638:51:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 10027,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "638:6:31",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "554d4120566f74696e6720546f6b656e207631",
              "id": 10028,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "668:21:31",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_d5578958948002c5d9782b929c27cb99c67596a2ff29be3d651049901a6f113a",
                "typeString": "literal_string \"UMA Voting Token v1\""
              },
              "value": "UMA Voting Token v1"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 10032,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 10126,
            "src": "740:37:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory",
              "typeString": "string"
            },
            "typeName": {
              "id": 10030,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "740:6:31",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "554d41",
              "id": 10031,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "772:5:31",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_bebbee9d39fececb0724ab1ef868a1430dbe5c23dd01c88e2707583165338b0d",
                "typeString": "literal_string \"UMA\""
              },
              "value": "UMA"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 10035,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 10126,
            "src": "828:35:31",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 10033,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "828:5:31",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 10034,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "861:2:31",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10083,
              "nodeType": "Block",
              "src": "936:255:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 10040,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10026,
                              "src": "972:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$10026_$",
                                "typeString": "type(enum VotingToken.Roles)"
                              }
                            },
                            "id": 10041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "972:11:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          ],
                          "id": 10039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "967:4:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 10042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "967:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 10044,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10026,
                              "src": "991:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$10026_$",
                                "typeString": "type(enum VotingToken.Roles)"
                              }
                            },
                            "id": 10045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "991:11:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          ],
                          "id": 10043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "986:4:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 10046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "986:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10047,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12860,
                          "src": "1005:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1005:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 10038,
                      "name": "_createExclusiveRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2581,
                      "src": "946:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 10049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "946:70:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10050,
                  "nodeType": "ExpressionStatement",
                  "src": "946:70:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 10053,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10026,
                              "src": "1049:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$10026_$",
                                "typeString": "type(enum VotingToken.Roles)"
                              }
                            },
                            "id": 10054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1049:12:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          ],
                          "id": 10052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1044:4:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 10055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1044:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 10057,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10026,
                              "src": "1069:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$10026_$",
                                "typeString": "type(enum VotingToken.Roles)"
                              }
                            },
                            "id": 10058,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1069:11:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          ],
                          "id": 10056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1064:4:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 10059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1064:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10063,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1097:1:31",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10062,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1083:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                            "typeString": "function (uint256) pure returns (address[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 10060,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1087:7:31",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 10061,
                            "length": null,
                            "nodeType": "ArrayTypeName",
                            "src": "1087:9:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          }
                        },
                        "id": 10064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1083:16:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 10051,
                      "name": "_createSharedRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2530,
                      "src": "1026:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,address[] memory)"
                      }
                    },
                    "id": 10065,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1026:74:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10066,
                  "nodeType": "ExpressionStatement",
                  "src": "1026:74:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 10069,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10026,
                              "src": "1133:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$10026_$",
                                "typeString": "type(enum VotingToken.Roles)"
                              }
                            },
                            "id": 10070,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1133:12:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          ],
                          "id": 10068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1128:4:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 10071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1128:18:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 10073,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10026,
                              "src": "1153:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$10026_$",
                                "typeString": "type(enum VotingToken.Roles)"
                              }
                            },
                            "id": 10074,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1153:11:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$10026",
                              "typeString": "enum VotingToken.Roles"
                            }
                          ],
                          "id": 10072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1148:4:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 10075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1148:17:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 10079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1181:1:31",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 10078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "1167:13:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_$",
                            "typeString": "function (uint256) pure returns (address[] memory)"
                          },
                          "typeName": {
                            "baseType": {
                              "id": 10076,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1171:7:31",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 10077,
                            "length": null,
                            "nodeType": "ArrayTypeName",
                            "src": "1171:9:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                              "typeString": "address[]"
                            }
                          }
                        },
                        "id": 10080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1167:16:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory",
                          "typeString": "address[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory",
                          "typeString": "address[] memory"
                        }
                      ],
                      "id": 10067,
                      "name": "_createSharedRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2530,
                      "src": "1110:17:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,address[] memory)"
                      }
                    },
                    "id": 10081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1110:74:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10082,
                  "nodeType": "ExpressionStatement",
                  "src": "1110:74:31"
                }
              ]
            },
            "documentation": null,
            "id": 10084,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10036,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "926:2:31"
            },
            "returnParameters": {
              "id": 10037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "936:0:31"
            },
            "scope": 10126,
            "src": "915:276:31",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10106,
              "nodeType": "Block",
              "src": "1393:61:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 10100,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10086,
                        "src": "1409:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10101,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10088,
                        "src": "1420:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10099,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11578
                      ],
                      "referencedDeclaration": 11578,
                      "src": "1403:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1403:23:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10103,
                  "nodeType": "ExpressionStatement",
                  "src": "1403:23:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 10104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1443:4:31",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 10098,
                  "id": 10105,
                  "nodeType": "Return",
                  "src": "1436:11:31"
                }
              ]
            },
            "documentation": "@dev Mints `value` tokens to `recipient`, returning true on success.",
            "id": 10107,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10092,
                          "name": "Roles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10026,
                          "src": "1363:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Roles_$10026_$",
                            "typeString": "type(enum VotingToken.Roles)"
                          }
                        },
                        "id": 10093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Minter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1363:12:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Roles_$10026",
                          "typeString": "enum VotingToken.Roles"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Roles_$10026",
                          "typeString": "enum VotingToken.Roles"
                        }
                      ],
                      "id": 10091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1358:4:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint"
                    },
                    "id": 10094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1358:18:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 10095,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10090,
                  "name": "onlyRoleHolder",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2261,
                  "src": "1343:14:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1343:34:31"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10086,
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 10107,
                  "src": "1303:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10085,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1303:7:31",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10088,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 10107,
                  "src": "1322:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10087,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1322:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1302:31:31"
            },
            "returnParameters": {
              "id": 10098,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10097,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 10107,
                  "src": "1387:4:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10096,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1387:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1386:6:31"
            },
            "scope": 10126,
            "src": "1289:165:31",
            "stateMutability": "nonpayable",
            "superFunction": 776,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10124,
              "nodeType": "Block",
              "src": "1602:41:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10119,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12860,
                          "src": "1618:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1618:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 10121,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10109,
                        "src": "1630:5:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10118,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11600
                      ],
                      "referencedDeclaration": 11600,
                      "src": "1612:5:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1612:24:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10123,
                  "nodeType": "ExpressionStatement",
                  "src": "1612:24:31"
                }
              ]
            },
            "documentation": "@dev Burns `value` tokens owned by `msg.sender`.",
            "id": 10125,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 10113,
                          "name": "Roles",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10026,
                          "src": "1587:5:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Roles_$10026_$",
                            "typeString": "type(enum VotingToken.Roles)"
                          }
                        },
                        "id": 10114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Burner",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1587:12:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Roles_$10026",
                          "typeString": "enum VotingToken.Roles"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_enum$_Roles_$10026",
                          "typeString": "enum VotingToken.Roles"
                        }
                      ],
                      "id": 10112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1582:4:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": "uint"
                    },
                    "id": 10115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1582:18:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 10116,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 10111,
                  "name": "onlyRoleHolder",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2261,
                  "src": "1567:14:31",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1567:34:31"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10109,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 10125,
                  "src": "1546:10:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10108,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1546:4:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1545:12:31"
            },
            "returnParameters": {
              "id": 10117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1602:0:31"
            },
            "scope": 10126,
            "src": "1532:111:31",
            "stateMutability": "nonpayable",
            "superFunction": 767,
            "visibility": "external"
          }
        ],
        "scope": 10127,
        "src": "314:1331:31"
      }
    ],
    "src": "0:1646:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x3BabBeBDF3Be74C059aAeF88d873Da700EC43777",
      "transactionHash": ""
    },
    "42": {
      "events": {},
      "links": {},
      "address": "0x932a60312157aB78F79cb27f823c2564E1667460",
      "transactionHash": ""
    },
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0x8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb67": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            }
          ],
          "name": "Snapshot",
          "type": "event",
          "signature": "0x8030e83b04d87bef53480e26263266d6ca66863aa8506aca6f2559d18aa1cb67"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        }
      },
      "links": {},
      "address": "0x7AE3a6Bee845BE0A473dEF4845CE5957BD6eC4f5",
      "transactionHash": "0x6b361f3d8edfe83bd81eecf352ff8675872d6d76ee0b59cd4758ad6d9fa8fbd5"
    }
  },
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-12-20T16:29:59.226Z",
  "networkType": "ethereum",
  "devdoc": {
    "details": "Supports snapshotting and allows the Oracle to mint new tokens as rewards.",
    "methods": {
      "addMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, shared role or if the caller is not a member of the managing role for `roleId`."
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Burns `value` tokens owned by `msg.sender`."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getMember(uint256)": {
        "details": "Reverts if `roleId` does not represent an initialized, exclusive role."
      },
      "holdsRole(uint256,address)": {
        "details": "Reverts if roleId does not correspond to an initialized role."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Mints `value` tokens to `recipient`, returning true on success."
      },
      "removeMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, shared role or if the caller is not a member of the managing role for `roleId`."
      },
      "resetMember(uint256,address)": {
        "details": "Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, exclusive role."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20};     * Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      }
    },
    "title": "Ownership of this token allows a voter to respond to price requests."
  },
  "userdoc": {
    "methods": {
      "addMember(uint256,address)": {
        "notice": "Adds `newMember` to the shared role, `roleId`."
      },
      "getMember(uint256)": {
        "notice": "Gets the current holder of the exclusive role, `roleId`."
      },
      "holdsRole(uint256,address)": {
        "notice": "Whether `memberToCheck` is a member of roleId."
      },
      "removeMember(uint256,address)": {
        "notice": "Removes `memberToRemove` from the shared role, `roleId`."
      },
      "resetMember(uint256,address)": {
        "notice": "Changes the exclusive role holder of `roleId` to `newMember`."
      }
    }
  }
}