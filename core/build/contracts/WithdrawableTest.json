{
  "contractName": "WithdrawableTest",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "getMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToCheck",
          "type": "address"
        }
      ],
      "name": "holdsRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToRemove",
          "type": "address"
        }
      ],
      "name": "removeMember",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "resetMember",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawErc20",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pay",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"getMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToCheck\",\"type\":\"address\"}],\"name\":\"holdsRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pay\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToRemove\",\"type\":\"address\"}],\"name\":\"removeMember\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"resetMember\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawErc20\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, shared role or if the caller is not a member of the managing role for `roleId`.\"},\"getMember(uint256)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, exclusive role.\"},\"holdsRole(uint256,address)\":{\"details\":\"Reverts if roleId does not correspond to an initialized role.\"},\"removeMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, shared role or if the caller is not a member of the managing role for `roleId`.\"},\"resetMember(uint256,address)\":{\"details\":\"Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, exclusive role.\"}}},\"userdoc\":{\"methods\":{\"addMember(uint256,address)\":{\"notice\":\"Adds `newMember` to the shared role, `roleId`.\"},\"getMember(uint256)\":{\"notice\":\"Gets the current holder of the exclusive role, `roleId`.\"},\"holdsRole(uint256,address)\":{\"notice\":\"Whether `memberToCheck` is a member of roleId.\"},\"removeMember(uint256,address)\":{\"notice\":\"Removes `memberToRemove` from the shared role, `roleId`.\"},\"resetMember(uint256,address)\":{\"notice\":\"Changes the exclusive role holder of `roleId` to `newMember`.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws ETH from the contract.\"},\"withdrawErc20(address,uint256)\":{\"notice\":\"Withdraws ERC20 tokens from the contract.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/ptare/protocol/core/contracts/test/WithdrawableTest.sol\":\"WithdrawableTest\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/ptare/protocol/core/contracts/MultiRole.sol\":{\"keccak256\":\"0xa66e77338b289f7f247819d6e19fec3d16c5c45cc149452183fbbb1d9883ecd0\",\"urls\":[\"bzz-raw://dbfdf45c05f4eda7411249ee1653ad48a3a76d1af6591379958cb6cce25f69bc\",\"dweb:/ipfs/QmYzFaG5dbNMu99V7dF4aFf93SwCWxFpc4bgAWF55R9tsV\"]},\"/Users/ptare/protocol/core/contracts/Withdrawable.sol\":{\"keccak256\":\"0x819778055a96c0210f6e4b6e51b3922f63f19006ded87b31306fb34312b2f66e\",\"urls\":[\"bzz-raw://134e3ce079116d1d0f1c706635b75f0baaa22e70f9e37724656471d3e8e68fed\",\"dweb:/ipfs/QmTcFG7LzVnPcuS3xeiT2hv6M3PuQhkrfkqor3Y64TzvBv\"]},\"/Users/ptare/protocol/core/contracts/test/WithdrawableTest.sol\":{\"keccak256\":\"0x3ee07ea8ce003c7fa9c26a3ec09f796ec8918de303516cef437f73086ca128e9\",\"urls\":[\"bzz-raw://f855d265ee529335d62391f38782cac9686ecce8b07094367615444e7b86aaea\",\"dweb:/ipfs/QmNWuaaLVuibbCcwzDQeFotd3gHwiRQC4M4FCNRZRHk5vr\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506200003f600060018111156200002457fe5b600060018111156200003257fe5b336200007160201b60201c565b6200006b6001808111156200005057fe5b600060018111156200005e57fe5b336200022360201b60201c565b62000327565b82600060028111156200008057fe5b60008083815260200190815260200160002060010160009054906101000a900460ff166002811115620000af57fe5b1462000123576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f43616e6e6f74207573652061207072652d6578697374696e6720726f6c65000081525060200191505060405180910390fd5b6000806000868152602001908152602001600020905060018160010160006101000a81548160ff021916908360028111156200015b57fe5b02179055508381600001819055506200018683826002016200024260201b62000d011790919060201c565b600060028111156200019457fe5b60008086815260200190815260200160002060010160009054906101000a900460ff166002811115620001c357fe5b14156200021c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c8152602001806200113f603c913960400191505060405180910390fd5b5050505050565b826001819055506200023d8383836200007160201b60201c565b505050565b6200025482826200025860201b60201c565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620002e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806200117b6023913960400191505060405180910390fd5b808260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b610e0880620003376000396000f3fe60806040526004361061007b5760003560e01c80637cdc1cb91161004e5780637cdc1cb91461017b578063ab3545e5146101ee578063bd1f4b5214610269578063d97c05be146102c45761007b565b80631b9265b8146100805780632e1a7d4d1461008a5780636be7658b146100c557806374d0a67614610120575b600080fd5b61008861031f565b005b34801561009657600080fd5b506100c3600480360360208110156100ad57600080fd5b810190808035906020019092919050505061032e565b005b3480156100d157600080fd5b5061011e600480360360408110156100e857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103db565b005b34801561012c57600080fd5b506101796004803603604081101561014357600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061050e565b005b34801561018757600080fd5b506101d46004803603604081101561019e57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610641565b604051808215151515815260200191505060405180910390f35b3480156101fa57600080fd5b506102276004803603602081101561021157600080fd5b810190808035906020019092919050505061076f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027557600080fd5b506102c26004803603604081101561028c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610828565b005b3480156102d057600080fd5b5061031d600480360360408110156102e757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610960565b005b6000341161032c57600080fd5b565b60015461033b8133610641565b610390576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610d6b6022913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156103d6573d6000803e3d6000fd5b505050565b816002808111156103e857fe5b60008083815260200190815260200160002060010160009054906101000a900460ff16600281111561041657fe5b1461046c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610d3f602c913960400191505060405180910390fd5b8261048c6000808381526020019081526020016000206000015433610641565b6104e1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610db06024913960400191505060405180910390fd5b61050883600080878152602001908152602001600020600301610a9490919063ffffffff16565b50505050565b8160028081111561051b57fe5b60008083815260200190815260200160002060010160009054906101000a900460ff16600281111561054957fe5b1461059f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610d3f602c913960400191505060405180910390fd5b826105bf6000808381526020019081526020016000206000015433610641565b610614576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610db06024913960400191505060405180910390fd5b61063b83600080878152602001908152602001600020600301610af290919063ffffffff16565b50505050565b60008060008085815260200190815260200160002090506001600281111561066557fe5b8160010160009054906101000a900460ff16600281111561068257fe5b14156106a65761069e8382600201610b5090919063ffffffff16565b915050610769565b6002808111156106b257fe5b8160010160009054906101000a900460ff1660028111156106cf57fe5b14156106f3576106eb8382600301610bad90919063ffffffff16565b915050610769565b6000610767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f496e76616c696420726f6c65496400000000000000000000000000000000000081525060200191505060405180910390fd5b505b92915050565b6000816001600281111561077f57fe5b60008083815260200190815260200160002060010160009054906101000a900460ff1660028111156107ad57fe5b14610803576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180610d10602f913960400191505060405180910390fd5b610820600080858152602001908152602001600020600201610c06565b915050919050565b6001546108358133610641565b61088a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610d6b6022913960400191505060405180910390fd5b60008390508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561091657600080fd5b505af115801561092a573d6000803e3d6000fd5b505050506040513d602081101561094057600080fd5b810190808051906020019092919050505061095a57600080fd5b50505050565b816001600281111561096e57fe5b60008083815260200190815260200160002060010160009054906101000a900460ff16600281111561099c57fe5b146109f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180610d10602f913960400191505060405180910390fd5b82610a126000808381526020019081526020016000206000015433610641565b610a67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610db06024913960400191505060405180910390fd5b610a8e83600080878152602001908152602001600020600201610c3490919063ffffffff16565b50505050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008173ffffffffffffffffffffffffffffffffffffffff168360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610cba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610d8d6023913960400191505060405180910390fd5b808260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b610d0b8282610c34565b505056fe4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783043616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e61676572a265627a7a72315820e230844d35bf84d2ef96ed65012f8244999112d58cb983fa2f957d8b879684bb64736f6c634300050d0032417474656d7074656420746f2075736520616e20696e76616c696420726f6c6520746f206d616e61676520616e206578636c757369766520726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f20307830",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80637cdc1cb91161004e5780637cdc1cb91461017b578063ab3545e5146101ee578063bd1f4b5214610269578063d97c05be146102c45761007b565b80631b9265b8146100805780632e1a7d4d1461008a5780636be7658b146100c557806374d0a67614610120575b600080fd5b61008861031f565b005b34801561009657600080fd5b506100c3600480360360208110156100ad57600080fd5b810190808035906020019092919050505061032e565b005b3480156100d157600080fd5b5061011e600480360360408110156100e857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506103db565b005b34801561012c57600080fd5b506101796004803603604081101561014357600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061050e565b005b34801561018757600080fd5b506101d46004803603604081101561019e57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610641565b604051808215151515815260200191505060405180910390f35b3480156101fa57600080fd5b506102276004803603602081101561021157600080fd5b810190808035906020019092919050505061076f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561027557600080fd5b506102c26004803603604081101561028c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610828565b005b3480156102d057600080fd5b5061031d600480360360408110156102e757600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610960565b005b6000341161032c57600080fd5b565b60015461033b8133610641565b610390576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610d6b6022913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156103d6573d6000803e3d6000fd5b505050565b816002808111156103e857fe5b60008083815260200190815260200160002060010160009054906101000a900460ff16600281111561041657fe5b1461046c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610d3f602c913960400191505060405180910390fd5b8261048c6000808381526020019081526020016000206000015433610641565b6104e1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610db06024913960400191505060405180910390fd5b61050883600080878152602001908152602001600020600301610a9490919063ffffffff16565b50505050565b8160028081111561051b57fe5b60008083815260200190815260200160002060010160009054906101000a900460ff16600281111561054957fe5b1461059f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610d3f602c913960400191505060405180910390fd5b826105bf6000808381526020019081526020016000206000015433610641565b610614576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610db06024913960400191505060405180910390fd5b61063b83600080878152602001908152602001600020600301610af290919063ffffffff16565b50505050565b60008060008085815260200190815260200160002090506001600281111561066557fe5b8160010160009054906101000a900460ff16600281111561068257fe5b14156106a65761069e8382600201610b5090919063ffffffff16565b915050610769565b6002808111156106b257fe5b8160010160009054906101000a900460ff1660028111156106cf57fe5b14156106f3576106eb8382600301610bad90919063ffffffff16565b915050610769565b6000610767576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f496e76616c696420726f6c65496400000000000000000000000000000000000081525060200191505060405180910390fd5b505b92915050565b6000816001600281111561077f57fe5b60008083815260200190815260200160002060010160009054906101000a900460ff1660028111156107ad57fe5b14610803576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180610d10602f913960400191505060405180910390fd5b610820600080858152602001908152602001600020600201610c06565b915050919050565b6001546108358133610641565b61088a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180610d6b6022913960400191505060405180910390fd5b60008390508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561091657600080fd5b505af115801561092a573d6000803e3d6000fd5b505050506040513d602081101561094057600080fd5b810190808051906020019092919050505061095a57600080fd5b50505050565b816001600281111561096e57fe5b60008083815260200190815260200160002060010160009054906101000a900460ff16600281111561099c57fe5b146109f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180610d10602f913960400191505060405180910390fd5b82610a126000808381526020019081526020016000206000015433610641565b610a67576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610db06024913960400191505060405180910390fd5b610a8e83600080878152602001908152602001600020600201610c3490919063ffffffff16565b50505050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008173ffffffffffffffffffffffffffffffffffffffff168360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614905092915050565b60008260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610cba576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180610d8d6023913960400191505060405180910390fd5b808260000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b610d0b8282610c34565b505056fe4d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783043616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e61676572a265627a7a72315820e230844d35bf84d2ef96ed65012f8244999112d58cb983fa2f957d8b879684bb64736f6c634300050d0032",
  "sourceMap": "150:442:41:-;;;309:204;8:9:-1;5:2;;;30:1;27;20:12;5:2;309:204:41;340:80;366:16;361:22;;;;;;;;390:16;385:22;;;;;;;;409:10;340:20;;;:80;;:::i;:::-;430:76;454:14;449:20;;;;;;;;476:16;471:22;;;;;;;;495:10;430:18;;;:76;;:::i;:::-;150:442;;6966:481:14;7094:6;5747:16;5721:42;;;;;;;;:5;:13;5727:6;5721:13;;;;;;;;;;;:22;;;;;;;;;;;;:42;;;;;;;;;5713:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7116:17;7136:5;:13;7142:6;7136:13;;;;;;;;;;;7116:33;;7175:18;7159:4;:13;;;:34;;;;;;;;;;;;;;;;;;;;;;;;7223:14;7203:4;:17;;:34;;;;7247:48;7281:13;7247:4;:28;;:33;;;;;;:48;;;;:::i;:::-;7347:16;7313:50;;;;;;;;:5;:21;7319:14;7313:21;;;;;;;;;;;:30;;;;;;;;;;;;:50;;;;;;;;;;7305:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5808:1;6966:481;;;;:::o;1037:180:32:-;1143:6;1133:7;:16;;;;1159:51;1180:6;1188:14;1204:5;1159:20;;;:51;;:::i;:::-;1037:180;;;:::o;654:144:14:-;749:42;761:14;777:13;749:11;;;:42;;:::i;:::-;654:144;;:::o;286:221::-;413:3;392:25;;:9;:25;;;;384:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;491:9;467:14;:21;;;:33;;;;;;;;;;;;;;;;;;286:221;;:::o;150:442:41:-;;;;;;;",
  "deployedSourceMap": "150:442:41:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;519:71;;;:::i;:::-;;403:108:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;403:108:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;403:108:32;;;;;;;;;;;;;;;;;:::i;:::-;;5173:189:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5173:189:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5173:189:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4752:173;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4752:173:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4752:173:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3320:433;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3320:433:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3320:433:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4357:157;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4357:157:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4357:157:14;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;590:196:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;590:196:32;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;590:196:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3997:183:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3997:183:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3997:183:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;519:71:41;581:1;569:9;:13;561:22;;;;;;519:71::o;403:108:32:-;458:7;;2251:29:14;2261:6;2269:10;2251:9;:29::i;:::-;2243:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;477:10:32;:19;;:27;497:6;477:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;477:27:32;403:108;;:::o;5173:189:14:-;5250:6;3080:15;3054:41;;;;;;;;:5;:13;3060:6;3054:13;;;;;;;;;;;:22;;;;;;;;;;;;:41;;;;;;;;;3046:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5274:6;2514:49;2524:5;:13;2530:6;2524:13;;;;;;;;;;;:26;;;2552:10;2514:9;:49::i;:::-;2506:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5292:63;5340:14;5292:5;:13;5298:6;5292:13;;;;;;;;;;;:34;;:47;;:63;;;;:::i;:::-;3154:1;5173:189;;;:::o;4752:173::-;4821:6;3080:15;3054:41;;;;;;;;:5;:13;3060:6;3054:13;;;;;;;;;;;:22;;;;;;;;;;;;:41;;;;;;;;;3046:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4845:6;2514:49;2524:5;:13;2530:6;2524:13;;;;;;;;;;;:26;;;2552:10;2514:9;:49::i;:::-;2506:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4863:55;4908:9;4863:5;:13;4869:6;4863:13;;;;;;;;;;;:34;;:44;;:55;;;;:::i;:::-;3154:1;4752:173;;;:::o;3320:433::-;3396:4;3412:17;3432:5;:13;3438:6;3432:13;;;;;;;;;;;3412:33;;3476:18;3459:35;;;;;;;;:4;:13;;;;;;;;;;;;:35;;;;;;;;;3455:250;;;3517:52;3555:13;3517:4;:28;;:37;;:52;;;;:::i;:::-;3510:59;;;;;3455:250;3607:15;3590:32;;;;;;;;:4;:13;;;;;;;;;;;;:32;;;;;;;;;3586:119;;;3645:49;3680:13;3645:4;:25;;:34;;:49;;;;:::i;:::-;3638:56;;;;;3586:119;3722:5;3714:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3320:433;;;;;;:::o;4357:157::-;4432:7;4415:6;2810:18;2784:44;;;;;;;;:5;:13;2790:6;2784:13;;;;;;;;;;;:22;;;;;;;;;;;;:44;;;;;;;;;2776:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4458:49;:5;:13;4464:6;4458:13;;;;;;;;;;;:37;;:47;:49::i;:::-;4451:56;;4357:157;;;;:::o;590:196:32:-;672:7;;2251:29:14;2261:6;2269:10;2251:9;:29::i;:::-;2243:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;691:12:32;713;691:35;;744:5;:14;;;759:10;771:6;744:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;744:34:32;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;744:34:32;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;744:34:32;;;;;;;;;;;;;;;;736:43;;;;;;2329:1:14;590:196:32;;;:::o;3997:183:14:-;4071:6;2810:18;2784:44;;;;;;;;:5;:13;2790:6;2784:13;;;;;;;;;;;:22;;;;;;;;;;;;:44;;;;;;;;;2776:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4095:6;2514:49;2524:5;:13;2530:6;2524:13;;;;;;;;;;;:26;;;2552:10;2514:9;:49::i;:::-;2506:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4113:60;4163:9;4113:5;:13;4119:6;4113:13;;;;;;;;;;;:37;;:49;;:60;;;;:::i;:::-;2890:1;3997:183;;;:::o;1230:157::-;1375:5;1334:14;:22;;:38;1357:14;1334:38;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;1230:157;;:::o;1077:147::-;1213:4;1175:14;:22;;:35;1198:11;1175:35;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;1077:147;;:::o;109:171::-;212:4;260:13;235:38;;:14;:21;;;;;;;;;;;;:38;;;228:45;;109:171;;;;:::o;901:170::-;1004:4;1027:14;:22;;:37;1050:13;1027:37;;;;;;;;;;;;;;;;;;;;;;;;;1020:44;;901:170;;;;:::o;513:135::-;594:7;620:14;:21;;;;;;;;;;;;613:28;;513:135;;;:::o;286:221::-;413:3;392:25;;:9;:25;;;;384:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;491:9;467:14;:21;;;:33;;;;;;;;;;;;;;;;;;286:221;;:::o;654:144::-;749:42;761:14;777:13;749:11;:42::i;:::-;654:144;;:::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"../Withdrawable.sol\";\n\n\n// WithdrawableTest is derived from the abstract contract Withdrawable for testing purposes.\ncontract WithdrawableTest is Withdrawable {\n\n    enum Roles {\n        Governance,\n        Withdraw\n    }\n\n    // solhint-disable-next-line no-empty-blocks\n    constructor() public {\n        _createExclusiveRole(uint(Roles.Governance), uint(Roles.Governance), msg.sender);\n        createWithdrawRole(uint(Roles.Withdraw), uint(Roles.Governance), msg.sender);\n    }\n\n    function pay() external payable {\n        require(msg.value > 0);\n    }\n}\n",
  "sourcePath": "/Users/ptare/protocol/core/contracts/test/WithdrawableTest.sol",
  "ast": {
    "absolutePath": "/Users/ptare/protocol/core/contracts/test/WithdrawableTest.sol",
    "exportedSymbols": {
      "WithdrawableTest": [
        11343
      ]
    },
    "id": 11344,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11295,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:41"
      },
      {
        "absolutePath": "/Users/ptare/protocol/core/contracts/Withdrawable.sol",
        "file": "../Withdrawable.sol",
        "id": 11296,
        "nodeType": "ImportDirective",
        "scope": 11344,
        "sourceUnit": 10209,
        "src": "25:29:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11297,
              "name": "Withdrawable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10208,
              "src": "179:12:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Withdrawable_$10208",
                "typeString": "contract Withdrawable"
              }
            },
            "id": 11298,
            "nodeType": "InheritanceSpecifier",
            "src": "179:12:41"
          }
        ],
        "contractDependencies": [
          2582,
          10208
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11343,
        "linearizedBaseContracts": [
          11343,
          10208,
          2582
        ],
        "name": "WithdrawableTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "WithdrawableTest.Roles",
            "id": 11301,
            "members": [
              {
                "id": 11299,
                "name": "Governance",
                "nodeType": "EnumValue",
                "src": "220:10:41"
              },
              {
                "id": 11300,
                "name": "Withdraw",
                "nodeType": "EnumValue",
                "src": "240:8:41"
              }
            ],
            "name": "Roles",
            "nodeType": "EnumDefinition",
            "src": "199:55:41"
          },
          {
            "body": {
              "id": 11330,
              "nodeType": "Block",
              "src": "330:183:41",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 11306,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11301,
                              "src": "366:5:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$11301_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 11307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "366:16:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$11301",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$11301",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 11305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "361:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 11308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "361:22:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 11310,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11301,
                              "src": "390:5:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$11301_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 11311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "390:16:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$11301",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$11301",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 11309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "385:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 11312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "385:22:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11313,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12860,
                          "src": "409:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "409:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 11304,
                      "name": "_createExclusiveRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2581,
                      "src": "340:20:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 11315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "340:80:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11316,
                  "nodeType": "ExpressionStatement",
                  "src": "340:80:41"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 11319,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11301,
                              "src": "454:5:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$11301_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 11320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "454:14:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$11301",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$11301",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 11318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "449:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 11321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "449:20:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 11323,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11301,
                              "src": "476:5:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$11301_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 11324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "476:16:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$11301",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$11301",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 11322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "471:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 11325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "471:22:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11326,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12860,
                          "src": "495:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "495:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 11317,
                      "name": "createWithdrawRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10197,
                      "src": "430:18:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 11328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "430:76:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11329,
                  "nodeType": "ExpressionStatement",
                  "src": "430:76:41"
                }
              ]
            },
            "documentation": null,
            "id": 11331,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:2:41"
            },
            "returnParameters": {
              "id": 11303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "330:0:41"
            },
            "scope": 11343,
            "src": "309:204:41",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11341,
              "nodeType": "Block",
              "src": "551:39:41",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 11335,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12860,
                            "src": "569:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "569:9:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 11337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "581:1:41",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "569:13:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12863,
                        12864
                      ],
                      "referencedDeclaration": 12863,
                      "src": "561:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 11339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "561:22:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11340,
                  "nodeType": "ExpressionStatement",
                  "src": "561:22:41"
                }
              ]
            },
            "documentation": null,
            "id": 11342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "531:2:41"
            },
            "returnParameters": {
              "id": 11333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "551:0:41"
            },
            "scope": 11343,
            "src": "519:71:41",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 11344,
        "src": "150:442:41"
      }
    ],
    "src": "0:593:41"
  },
  "legacyAST": {
    "absolutePath": "/Users/ptare/protocol/core/contracts/test/WithdrawableTest.sol",
    "exportedSymbols": {
      "WithdrawableTest": [
        11343
      ]
    },
    "id": 11344,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11295,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:41"
      },
      {
        "absolutePath": "/Users/ptare/protocol/core/contracts/Withdrawable.sol",
        "file": "../Withdrawable.sol",
        "id": 11296,
        "nodeType": "ImportDirective",
        "scope": 11344,
        "sourceUnit": 10209,
        "src": "25:29:41",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11297,
              "name": "Withdrawable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10208,
              "src": "179:12:41",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Withdrawable_$10208",
                "typeString": "contract Withdrawable"
              }
            },
            "id": 11298,
            "nodeType": "InheritanceSpecifier",
            "src": "179:12:41"
          }
        ],
        "contractDependencies": [
          2582,
          10208
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11343,
        "linearizedBaseContracts": [
          11343,
          10208,
          2582
        ],
        "name": "WithdrawableTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "WithdrawableTest.Roles",
            "id": 11301,
            "members": [
              {
                "id": 11299,
                "name": "Governance",
                "nodeType": "EnumValue",
                "src": "220:10:41"
              },
              {
                "id": 11300,
                "name": "Withdraw",
                "nodeType": "EnumValue",
                "src": "240:8:41"
              }
            ],
            "name": "Roles",
            "nodeType": "EnumDefinition",
            "src": "199:55:41"
          },
          {
            "body": {
              "id": 11330,
              "nodeType": "Block",
              "src": "330:183:41",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 11306,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11301,
                              "src": "366:5:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$11301_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 11307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "366:16:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$11301",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$11301",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 11305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "361:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 11308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "361:22:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 11310,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11301,
                              "src": "390:5:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$11301_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 11311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "390:16:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$11301",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$11301",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 11309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "385:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 11312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "385:22:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11313,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12860,
                          "src": "409:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "409:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 11304,
                      "name": "_createExclusiveRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2581,
                      "src": "340:20:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 11315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "340:80:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11316,
                  "nodeType": "ExpressionStatement",
                  "src": "340:80:41"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 11319,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11301,
                              "src": "454:5:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$11301_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 11320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "454:14:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$11301",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$11301",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 11318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "449:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 11321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "449:20:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 11323,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11301,
                              "src": "476:5:41",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$11301_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 11324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "476:16:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$11301",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$11301",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 11322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "471:4:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": "uint"
                        },
                        "id": 11325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "471:22:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 11326,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12860,
                          "src": "495:3:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 11327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "495:10:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 11317,
                      "name": "createWithdrawRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10197,
                      "src": "430:18:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 11328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "430:76:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11329,
                  "nodeType": "ExpressionStatement",
                  "src": "430:76:41"
                }
              ]
            },
            "documentation": null,
            "id": 11331,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:2:41"
            },
            "returnParameters": {
              "id": 11303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "330:0:41"
            },
            "scope": 11343,
            "src": "309:204:41",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11341,
              "nodeType": "Block",
              "src": "551:39:41",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 11335,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12860,
                            "src": "569:3:41",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 11336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "569:9:41",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 11337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "581:1:41",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "569:13:41",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        12863,
                        12864
                      ],
                      "referencedDeclaration": 12863,
                      "src": "561:7:41",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 11339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "561:22:41",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11340,
                  "nodeType": "ExpressionStatement",
                  "src": "561:22:41"
                }
              ]
            },
            "documentation": null,
            "id": 11342,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "531:2:41"
            },
            "returnParameters": {
              "id": 11333,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "551:0:41"
            },
            "scope": 11343,
            "src": "519:71:41",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 11344,
        "src": "150:442:41"
      }
    ],
    "src": "0:593:41"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.19",
  "updatedAt": "2019-12-19T23:40:36.555Z",
  "devdoc": {
    "methods": {
      "addMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, shared role or if the caller is not a member of the managing role for `roleId`."
      },
      "getMember(uint256)": {
        "details": "Reverts if `roleId` does not represent an initialized, exclusive role."
      },
      "holdsRole(uint256,address)": {
        "details": "Reverts if roleId does not correspond to an initialized role."
      },
      "removeMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, shared role or if the caller is not a member of the managing role for `roleId`."
      },
      "resetMember(uint256,address)": {
        "details": "Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, exclusive role."
      }
    }
  },
  "userdoc": {
    "methods": {
      "addMember(uint256,address)": {
        "notice": "Adds `newMember` to the shared role, `roleId`."
      },
      "getMember(uint256)": {
        "notice": "Gets the current holder of the exclusive role, `roleId`."
      },
      "holdsRole(uint256,address)": {
        "notice": "Whether `memberToCheck` is a member of roleId."
      },
      "removeMember(uint256,address)": {
        "notice": "Removes `memberToRemove` from the shared role, `roleId`."
      },
      "resetMember(uint256,address)": {
        "notice": "Changes the exclusive role holder of `roleId` to `newMember`."
      },
      "withdraw(uint256)": {
        "notice": "Withdraws ETH from the contract."
      },
      "withdrawErc20(address,uint256)": {
        "notice": "Withdraws ERC20 tokens from the contract."
      }
    }
  }
}